// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// emfit_mapgen_group
List emfit_mapgen_group(NumericVector alpha, NumericVector xi, NumericMatrix D0, NumericMatrix D1, List data, List options, NumericMatrix P0, NumericMatrix P1, NumericMatrix H0, NumericMatrix H1, NumericMatrix en0, NumericMatrix en1);
RcppExport SEXP _mapfit_emfit_mapgen_group(SEXP alphaSEXP, SEXP xiSEXP, SEXP D0SEXP, SEXP D1SEXP, SEXP dataSEXP, SEXP optionsSEXP, SEXP P0SEXP, SEXP P1SEXP, SEXP H0SEXP, SEXP H1SEXP, SEXP en0SEXP, SEXP en1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type D0(D0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type D1(D1SEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type P0(P0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type P1(P1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type H0(H0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type H1(H1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type en0(en0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type en1(en1SEXP);
    rcpp_result_gen = Rcpp::wrap(emfit_mapgen_group(alpha, xi, D0, D1, data, options, P0, P1, H0, H1, en0, en1));
    return rcpp_result_gen;
END_RCPP
}
// emfit_gmmpp_group
List emfit_gmmpp_group(NumericVector alpha, NumericVector xi, NumericMatrix D0, NumericMatrix D1, List data, List options, NumericMatrix P0, NumericMatrix P1, NumericMatrix en0, NumericMatrix en1, NumericMatrix G, NumericMatrix PsiT1, NumericMatrix PsiT2, NumericMatrix PsiN1, NumericMatrix PsiN2, NumericMatrix tmpm);
RcppExport SEXP _mapfit_emfit_gmmpp_group(SEXP alphaSEXP, SEXP xiSEXP, SEXP D0SEXP, SEXP D1SEXP, SEXP dataSEXP, SEXP optionsSEXP, SEXP P0SEXP, SEXP P1SEXP, SEXP en0SEXP, SEXP en1SEXP, SEXP GSEXP, SEXP PsiT1SEXP, SEXP PsiT2SEXP, SEXP PsiN1SEXP, SEXP PsiN2SEXP, SEXP tmpmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type D0(D0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type D1(D1SEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type P0(P0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type P1(P1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type en0(en0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type en1(en1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type G(GSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PsiT1(PsiT1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PsiT2(PsiT2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PsiN1(PsiN1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PsiN2(PsiN2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tmpm(tmpmSEXP);
    rcpp_result_gen = Rcpp::wrap(emfit_gmmpp_group(alpha, xi, D0, D1, data, options, P0, P1, en0, en1, G, PsiT1, PsiT2, PsiN1, PsiN2, tmpm));
    return rcpp_result_gen;
END_RCPP
}
// emfit_cf1_wtime
List emfit_cf1_wtime(NumericVector alpha, NumericVector rate, List data, List options, S4 Q0, S4 P0, S4 H0);
RcppExport SEXP _mapfit_emfit_cf1_wtime(SEXP alphaSEXP, SEXP rateSEXP, SEXP dataSEXP, SEXP optionsSEXP, SEXP Q0SEXP, SEXP P0SEXP, SEXP H0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< S4 >::type Q0(Q0SEXP);
    Rcpp::traits::input_parameter< S4 >::type P0(P0SEXP);
    Rcpp::traits::input_parameter< S4 >::type H0(H0SEXP);
    rcpp_result_gen = Rcpp::wrap(emfit_cf1_wtime(alpha, rate, data, options, Q0, P0, H0));
    return rcpp_result_gen;
END_RCPP
}
// emfit_cf1_group
List emfit_cf1_group(NumericVector alpha, NumericVector rate, List data, List options, S4 Q0, S4 P0, S4 H0);
RcppExport SEXP _mapfit_emfit_cf1_group(SEXP alphaSEXP, SEXP rateSEXP, SEXP dataSEXP, SEXP optionsSEXP, SEXP Q0SEXP, SEXP P0SEXP, SEXP H0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< S4 >::type Q0(Q0SEXP);
    Rcpp::traits::input_parameter< S4 >::type P0(P0SEXP);
    Rcpp::traits::input_parameter< S4 >::type H0(H0SEXP);
    rcpp_result_gen = Rcpp::wrap(emfit_cf1_group(alpha, rate, data, options, Q0, P0, H0));
    return rcpp_result_gen;
END_RCPP
}
// emfit_cf1_group_poi
List emfit_cf1_group_poi(double omega, NumericVector alpha, NumericVector rate, List data, List options, S4 Q0, S4 P0, S4 H0);
RcppExport SEXP _mapfit_emfit_cf1_group_poi(SEXP omegaSEXP, SEXP alphaSEXP, SEXP rateSEXP, SEXP dataSEXP, SEXP optionsSEXP, SEXP Q0SEXP, SEXP P0SEXP, SEXP H0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< S4 >::type Q0(Q0SEXP);
    Rcpp::traits::input_parameter< S4 >::type P0(P0SEXP);
    Rcpp::traits::input_parameter< S4 >::type H0(H0SEXP);
    rcpp_result_gen = Rcpp::wrap(emfit_cf1_group_poi(omega, alpha, rate, data, options, Q0, P0, H0));
    return rcpp_result_gen;
END_RCPP
}
// emfit_gph_wtime
List emfit_gph_wtime(NumericVector alpha, S4 Q0, NumericVector xi, List data, List options, S4 P0, S4 H0);
RcppExport SEXP _mapfit_emfit_gph_wtime(SEXP alphaSEXP, SEXP Q0SEXP, SEXP xiSEXP, SEXP dataSEXP, SEXP optionsSEXP, SEXP P0SEXP, SEXP H0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< S4 >::type Q0(Q0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< S4 >::type P0(P0SEXP);
    Rcpp::traits::input_parameter< S4 >::type H0(H0SEXP);
    rcpp_result_gen = Rcpp::wrap(emfit_gph_wtime(alpha, Q0, xi, data, options, P0, H0));
    return rcpp_result_gen;
END_RCPP
}
// emfit_gph_group
List emfit_gph_group(NumericVector alpha, S4 Q0, NumericVector xi, List data, List options, S4 P0, S4 H0);
RcppExport SEXP _mapfit_emfit_gph_group(SEXP alphaSEXP, SEXP Q0SEXP, SEXP xiSEXP, SEXP dataSEXP, SEXP optionsSEXP, SEXP P0SEXP, SEXP H0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< S4 >::type Q0(Q0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< S4 >::type P0(P0SEXP);
    Rcpp::traits::input_parameter< S4 >::type H0(H0SEXP);
    rcpp_result_gen = Rcpp::wrap(emfit_gph_group(alpha, Q0, xi, data, options, P0, H0));
    return rcpp_result_gen;
END_RCPP
}
// emfit_gph_group_poi
List emfit_gph_group_poi(double omega, NumericVector alpha, S4 Q0, NumericVector xi, List data, List options, S4 P0, S4 H0);
RcppExport SEXP _mapfit_emfit_gph_group_poi(SEXP omegaSEXP, SEXP alphaSEXP, SEXP Q0SEXP, SEXP xiSEXP, SEXP dataSEXP, SEXP optionsSEXP, SEXP P0SEXP, SEXP H0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< S4 >::type Q0(Q0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< S4 >::type P0(P0SEXP);
    Rcpp::traits::input_parameter< S4 >::type H0(H0SEXP);
    rcpp_result_gen = Rcpp::wrap(emfit_gph_group_poi(omega, alpha, Q0, xi, data, options, P0, H0));
    return rcpp_result_gen;
END_RCPP
}
// emfit_herlang_wtime
List emfit_herlang_wtime(NumericVector alpha, IntegerVector shape, NumericVector rate, List data, List options);
RcppExport SEXP _mapfit_emfit_herlang_wtime(SEXP alphaSEXP, SEXP shapeSEXP, SEXP rateSEXP, SEXP dataSEXP, SEXP optionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    rcpp_result_gen = Rcpp::wrap(emfit_herlang_wtime(alpha, shape, rate, data, options));
    return rcpp_result_gen;
END_RCPP
}
// emfit_herlang_group
List emfit_herlang_group(NumericVector alpha, IntegerVector shape, NumericVector rate, List data, List options);
RcppExport SEXP _mapfit_emfit_herlang_group(SEXP alphaSEXP, SEXP shapeSEXP, SEXP rateSEXP, SEXP dataSEXP, SEXP optionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    rcpp_result_gen = Rcpp::wrap(emfit_herlang_group(alpha, shape, rate, data, options));
    return rcpp_result_gen;
END_RCPP
}
// emfit_herlang_group_poi
List emfit_herlang_group_poi(NumericVector alpha, IntegerVector shape, NumericVector rate, double omega, List data, List options);
RcppExport SEXP _mapfit_emfit_herlang_group_poi(SEXP alphaSEXP, SEXP shapeSEXP, SEXP rateSEXP, SEXP omegaSEXP, SEXP dataSEXP, SEXP optionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< double >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    rcpp_result_gen = Rcpp::wrap(emfit_herlang_group_poi(alpha, shape, rate, omega, data, options));
    return rcpp_result_gen;
END_RCPP
}
// phase_dist_pdf
NumericVector phase_dist_pdf(NumericVector dt, double maxtime, NumericVector alpha, S4 Q0, NumericVector xi, double eps, double ufactor, S4 P0);
RcppExport SEXP _mapfit_phase_dist_pdf(SEXP dtSEXP, SEXP maxtimeSEXP, SEXP alphaSEXP, SEXP Q0SEXP, SEXP xiSEXP, SEXP epsSEXP, SEXP ufactorSEXP, SEXP P0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type maxtime(maxtimeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< S4 >::type Q0(Q0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type ufactor(ufactorSEXP);
    Rcpp::traits::input_parameter< S4 >::type P0(P0SEXP);
    rcpp_result_gen = Rcpp::wrap(phase_dist_pdf(dt, maxtime, alpha, Q0, xi, eps, ufactor, P0));
    return rcpp_result_gen;
END_RCPP
}
// phase_dist_ccdf
NumericVector phase_dist_ccdf(NumericVector dt, double maxtime, NumericVector alpha, S4 Q0, double eps, double ufactor, S4 P0);
RcppExport SEXP _mapfit_phase_dist_ccdf(SEXP dtSEXP, SEXP maxtimeSEXP, SEXP alphaSEXP, SEXP Q0SEXP, SEXP epsSEXP, SEXP ufactorSEXP, SEXP P0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type maxtime(maxtimeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< S4 >::type Q0(Q0SEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type ufactor(ufactorSEXP);
    Rcpp::traits::input_parameter< S4 >::type P0(P0SEXP);
    rcpp_result_gen = Rcpp::wrap(phase_dist_ccdf(dt, maxtime, alpha, Q0, eps, ufactor, P0));
    return rcpp_result_gen;
END_RCPP
}
// phase_cf1_sort
int phase_cf1_sort(NumericVector alpha, NumericVector rate);
RcppExport SEXP _mapfit_phase_cf1_sort(SEXP alphaSEXP, SEXP rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rate(rateSEXP);
    rcpp_result_gen = Rcpp::wrap(phase_cf1_sort(alpha, rate));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mapfit_emfit_mapgen_group", (DL_FUNC) &_mapfit_emfit_mapgen_group, 12},
    {"_mapfit_emfit_gmmpp_group", (DL_FUNC) &_mapfit_emfit_gmmpp_group, 16},
    {"_mapfit_emfit_cf1_wtime", (DL_FUNC) &_mapfit_emfit_cf1_wtime, 7},
    {"_mapfit_emfit_cf1_group", (DL_FUNC) &_mapfit_emfit_cf1_group, 7},
    {"_mapfit_emfit_cf1_group_poi", (DL_FUNC) &_mapfit_emfit_cf1_group_poi, 8},
    {"_mapfit_emfit_gph_wtime", (DL_FUNC) &_mapfit_emfit_gph_wtime, 7},
    {"_mapfit_emfit_gph_group", (DL_FUNC) &_mapfit_emfit_gph_group, 7},
    {"_mapfit_emfit_gph_group_poi", (DL_FUNC) &_mapfit_emfit_gph_group_poi, 8},
    {"_mapfit_emfit_herlang_wtime", (DL_FUNC) &_mapfit_emfit_herlang_wtime, 5},
    {"_mapfit_emfit_herlang_group", (DL_FUNC) &_mapfit_emfit_herlang_group, 5},
    {"_mapfit_emfit_herlang_group_poi", (DL_FUNC) &_mapfit_emfit_herlang_group_poi, 6},
    {"_mapfit_phase_dist_pdf", (DL_FUNC) &_mapfit_phase_dist_pdf, 8},
    {"_mapfit_phase_dist_ccdf", (DL_FUNC) &_mapfit_phase_dist_ccdf, 7},
    {"_mapfit_phase_cf1_sort", (DL_FUNC) &_mapfit_phase_cf1_sort, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_mapfit(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
